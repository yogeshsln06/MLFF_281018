@model VaaaN.MLFF.Libraries.CommonLibrary.CBE.LaneCBE
@{
    Layout = null;
}
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("LaneEdit", "SetUp", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <input type="hidden" id="hfUserId" value="@ViewBag.UserId" />
                <input type="hidden" id="hfPlazaId" value="@ViewBag.PlazaId" />
                <input type="hidden" id="hfLaneTypeId" value="@ViewBag.LaneTypeId" />
                <input type="hidden" id="hfCameraIdFront" value="@ViewBag.CameraIdFront" />
                <input type="hidden" id="hfCameraIdRear" value="@ViewBag.CameraIdRear" />
                <input type="hidden" id="hfEtcReaderId" value="@ViewBag.EtcReaderId" />
                <input type="hidden" id="hfAntennaIdFront" value="@ViewBag.hfAntennaIdFront" />
                <input type="hidden" id="hfAntennaIdRear" value="@ViewBag.hfAntennaIdRear" />
                @*@Html.HiddenFor(model => model.LaneId)*@
                <fieldset id="fildset">
                    <div class="modal-body" style="height:400px; overflow-y:scroll;">
                        <h5 class="c-mygrey-900 heading"><strong>Lane </strong>Information<span></span></h5>
                        <div class="mT-5">

                            <div class="form-row">
                                <div class="form-group col-md-2 required">
                                    <label for="lblPlazaId" class="form-label">Lane ID</label>
                                </div>
                                <div class="form-group col-md-4 required">
                                    @Html.EditorFor(model => model.LaneId, new { htmlAttributes = new { @class = "form-control", } })
                                </div>
                                
                                <div class="form-group col-md-2 required">
                                    @*<label for="LaneName" class="form-label required">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.LaneName</label>*@
                                    @Html.LabelFor(model => model.LaneName, htmlAttributes: new { @class = "control-label required" })
                                </div>
                                <div class="form-group  col-md-4">
                                    @Html.EditorFor(model => model.LaneName, new { htmlAttributes = new { @class = "form-control required" } })
                                    @Html.ValidationMessageFor(model => model.LaneName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group col-md-2 ">
                                    <label for="PlazaId" class="form-label required">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.Gantry</label>
                                </div>
                                <div class="form-group  col-md-4">
                                    @Html.DropDownList("PlazaId", (IEnumerable<SelectListItem>)ViewBag.Gantry, " ", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PlazaId, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-2 required">
                                    @*<label for="LaneTypeId" class="form-label required">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.LaneType</label>*@
                                    @Html.LabelFor(model => model.LaneTypeId, htmlAttributes: new { @class = "control-label required" })
                                </div>
                                <div class="form-group  col-md-4">
                                    @Html.DropDownList("LaneTypeId", (IEnumerable<SelectListItem>)ViewBag.LaneType," ", new { @class = "form-control required" })
                                    @Html.ValidationMessageFor(model => model.LaneTypeId, "", new { @class = "text-danger" })
                                </div>
                               
                            </div>

                            <div class="form-row">
                                <div class="form-group col-md-2 required">
                                    <label for="CameraIdFront" class="form-label required">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.CameraNameFront</label>
                                </div>
                                <div class="form-group  col-md-4">
                                    @Html.DropDownList("CameraIdFront", (IEnumerable<SelectListItem>)ViewBag.ANPR, " ", new { @class = "form-control required" })
                                    @Html.ValidationMessageFor(model => model.CameraIdFront, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-2 ">
                                    <label for="CameraIdRear" class="form-label required">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.CameraNameRear</label>
                                </div>
                                <div class="form-group  col-md-4">
                                    @Html.DropDownList("CameraIdRear", (IEnumerable<SelectListItem>)ViewBag.ANPR," ", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CameraIdRear, "", new { @class = "text-danger" })
                                </div>
                                @*<div class="form-group col-md-2 required">
                                    <label for="EtcReaderId" class="form-label required">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.ETCReaderName</label>
                                </div>*@
                            </div>
                            <div class="form-row">
                               
                                <div class="form-group col-md-2 required">
                                    @Html.LabelFor(model => model.EtcAntennaNameFront, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="form-group  col-md-4">
                                    @Html.DropDownList("EtcAntennaNameFront", (IEnumerable<SelectListItem>)ViewBag.RFIDFront, " ", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EtcAntennaNameFront, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-2 required">
                                   @Html.LabelFor(model => model.EtcAntennaNameRear, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="form-group  col-md-4">
                                    @*@Html.DropDownList("EtcReaderId", (IEnumerable<SelectListItem>)ViewBag.RFID, " ", new { @class = "form-control" })*@
                                    @Html.DropDownList("EtcAntennaNameRear", (IEnumerable<SelectListItem>)ViewBag.RFIDRear, " ", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EtcAntennaNameRear, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4" style="float:right">
                                <span id="lblErrors" style="color:red;"></span>

                                @if (TempData["Message"] != null && TempData["Message"].ToString() != "")
                                {
                                    <span style="color:red;">@TempData["Message"]!</span>
                                }
                            </div>
                        </div>
                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>
            <div class="modal-footer">
                <div class="alert alert-warning" role="alert" id="warning">
                </div>
                <button type="button" class="btn btn-outline-danger" id="btnClose" data-dismiss="modal">Cancel</button>
                @*<button type="button" class="btn btn-outline-danger" id="btnCancel" onclick="ResetFieldes();">Cancel</button>*@
                <button type="button" class="btn btn-outline-primary" onclick="SaveLaneData('close')" id="btnSave">Save</button>
            </div>

