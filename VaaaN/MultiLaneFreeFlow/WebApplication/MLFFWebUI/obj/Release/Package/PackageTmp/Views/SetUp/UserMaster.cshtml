@model VaaaN.MLFF.Libraries.CommonLibrary.CBE.UserCBE
@{
    Layout = null;
}
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<fieldset id="fildset">
    @using (Html.BeginForm("UsersList", "SetUp", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="modal-body" style="height:400px; overflow-y:scroll;">
            <h5 class="c-mygrey-900 heading"><strong>Personal </strong>Information<span></span></h5>
            <div class="mT-5">
                <div class="form-row">
                    <div class="form-group required col-md-2">
                        @Html.LabelFor(model => model.LoginName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="form-group  col-md-4">
                        @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @class = "form-control", placeholder = "Login Name", autofocus = "true" } })
                        @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group required col-md-2">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="form-group required col-md-4">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", Type = "Password", maxlength = "15", placeholder = "Password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="form-row">
                    <div class="form-group required col-md-2">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label required" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control required" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group required col-md-2">
                        @Html.LabelFor(model => model.UserDob, htmlAttributes: new { @class = "control-label required" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.EditorFor(model => model.UserDob, new { htmlAttributes = new { @class = "form-control ", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.UserDob, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="form-row">
                    <div class="form-group required col-md-2">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label required" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control required" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group  required col-md-2">
                        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label required" })
                    </div>
                    <div class="form-group  col-md-4">
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control required" } })
                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="form-row">
                    <div class="form-group required col-md-2">
                        @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control required" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group required col-md-2">
                        @Html.LabelFor(model => model.AccountExpiryDate, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="form-group  col-md-4">
                        @Html.EditorFor(model => model.AccountExpiryDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.AccountExpiryDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="form-row">
                    <div class="form-group required col-md-2">
                        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label required" })
                    </div>
                    <div class="form-group  col-md-4">
                        @Html.DropDownList("RoleId", null, "Select Role", new { @class = "form-control required" })
                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.UserStatus, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="form-group col-md-4" >
                        @Html.CheckBoxFor(model => model.UserStatus, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>

        </div>
    }
    <div class="modal-footer">
        <div class="alert alert-warning" role="alert" id="warning">
        </div>
        <button type="button" class="btn btn-outline-danger" data-dismiss="modal" id="btnpopupClose">Cancel</button>
        <button type="button" class="btn btn-outline-secondary" onclick="SaveData('new')" id="btnSaveNew">Save & New</button>
        <button type="button" class="btn btn-outline-primary" onclick="SaveData('close')" id="btnSave">Save</button>
    </div>
</fieldset>
