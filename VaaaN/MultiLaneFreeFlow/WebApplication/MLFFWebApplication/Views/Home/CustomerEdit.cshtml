@model VaaaN.MLFF.Libraries.CommonLibrary.CBE.CustomerAccountCBE

@{
    ViewBag.Title = "Edit Customer";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
       

        $('.prev i').removeClass();
        $('.prev i').addClass("fa fa-chevron-left");

        $('.next i').removeClass();
        $('.next i').addClass("fa fa-chevron-right");
        $('#module_2').css({ "background-color": "#00B4CE" });
        $('#module_2').css({ "font-weight": "bold" });
        $('#submodule_1').css({ "background-color": "#00B2aa" });
        $('#submodule_1').css({ "font-weight": "bold" });

        $("#buttonUserBack").click(function () {
            // Back to User List
            location.href = "@Url.Action("CustomerList", "Home")";
        });
    });
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function Validation() {

        if (!validateCustomer()) {
            return false;
        }

        return true;
    }
    function readUrl(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#userimage')
                    .attr('src', e.target.result)
                    .width(60)
                    .height(60);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
    function validateAlpha() {
        var textInput = document.getElementById("FirstName").value;
        textInput = textInput.replace(/[^A-Za-z]/g, "");
        document.getElementById("FirstName").value = textInput;
    }
    function validateLastname() {
        var textInput2 = document.getElementById("LastName").value;
        textInput2 = textInput2.replace(/[^A-Za-z]/g, "");
        document.getElementById("LastName").value = textInput2;
    }
</script>

<script src="~/js/userValidation.js"></script>

<div class="grid-container">
    <div class="panel panel-info">
        <div class="panel-heading" style="background-color:rgb(64, 178, 205);">
            <h1 class="panel-title new-title">Edit</h1>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <input type="hidden" id="hfUserId" value="@ViewBag.UserId" />

                    @using (Html.BeginForm("CustomerEdit", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(model => model.AccountId)
                        <div class="row">
                            <form role="form">
                                <div class="clearfix"></div>
                                <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                                    <label for="txtFirstName" class="form-label required">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.FirstName</label>
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name", oninput = "validateAlpha();" } })
                                </div>

                                <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                                    <label for="txtLastName" class="form-label">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.LastName</label>
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name", oninput = "validateLastname();" } })
                                </div>
                                <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                                    <label for="txtDob" class="form-label">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.Description</label>
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "DESCRIPTION" } })
                                </div>

                                <div class="clearfix"></div>

                                <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                                    <label for="txtAddress1" class="form-label">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.Address</label>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                                </div>

                                <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                                    <label for="txtMobileNo" class="form-label required">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.MobileNo</label>
                                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", maxlength = "15", placeholder = "Mobile No", onkeypress = "return isNumberKey(event)" } })
                                </div>

                                <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                                    <label for="txtEmailId" class="form-label required">@VaaaN.MLFF.Libraries.CommonLibrary.Resource.Resourceen.EmailId</label>
                                    @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Id" } })
                                </div>


                                <div class="clearfix"></div>

                                <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">
                                    <label for="txtAccountExpiry" class="form-label">Account Balance</label>
                                    @Html.EditorFor(model => model.AccountBalance, new { htmlAttributes = new { @class = "form-control", placeholder = "0.000" } })
                                </div>






                                <div class="clearfix"></div>


                                <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4">

                                </div>
                                <div class="form-group col-xs-10 col-sm-4 col-md-4 col-lg-4" style="float:right">
                                    <span id="lblErrors" style="color:red;"></span>

                                    @if (TempData["Message"] != null && TempData["Message"].ToString() != "")
                                    {
                                        <span style="color:red;">@TempData["Message"]!</span>

                                    }
                                </div>
                                <div class="clearfix"></div>
                                <div class="col-xs-10 col-sm-4 col-md-4 col-lg-4">
                                    <button type="submit" class="btn btn-primary" onclick="return Validation();">Save</button>&nbsp;&nbsp;<button id="buttonUserBack" type="button" class="btn btn-primary">Back</button>
                                </div>
                            </form>
                            <div class="clearfix"></div>
                        </div>
                    }
                </div>


            </div>
        </div>
    </div>
</div>
