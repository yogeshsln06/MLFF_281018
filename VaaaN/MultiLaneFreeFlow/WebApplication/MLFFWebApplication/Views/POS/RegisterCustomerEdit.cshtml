@model VaaaN.MLFF.Libraries.CommonLibrary.CBE.CustomerAccountCBE
@{
    ViewBag.Title = "Customer Registration";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<style type="text/css">
    input[type='number'] {
        -moz-appearance: textfield;
    }
    /* Webkit browsers like Safari and Chrome */
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    #dvPreview {
            filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=image);
            /*max-height: 400px;
                max-width: 400px;*/
            display: none;
            float: left;
            position: absolute;
            left: 0px;
            top: 0px;
            z-index: 1000;
            background-color: #204d74;
            padding: 2px;
            color: #FFFFFF;
            font-weight: bold;
        }
    #dvPreview img {
                height: 120px;
                width: 300px;
     }
</style>
<script src="~/js/CustomerAccount.js"></script>
@using (Html.BeginForm("RegisterCustomerEdit", "POS", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-info">
        <div class="panel-heading" style="background-color:rgb(64, 178, 205);">
            <h1 class="panel-title new-title">Customer Registration</h1>
        </div>
        <input type="hidden" id="hfGender" value="@ViewBag.hfGender" />
        <input type="hidden" id="hfProvinceId" value="@ViewBag.hfProvinceId" />
        <input type="hidden" id="hfCityId" value="@ViewBag.hfCityId" />
        <input type="hidden" id="hfDistrictId" value="@ViewBag.hfDistrictId" />
        <input type="hidden" id="hfSubDistrictId" value="@ViewBag.hfSubDistrictId" />
        <input type="hidden" id="hfMaritalStatus" value="@ViewBag.hfMaritalStatus" />
        <input type="hidden" id="hfNationality" value="@ViewBag.hfNationality" />
        
        <input type="hidden" id="hfPostalCode" value="@ViewBag.PostalCode" />
        <input type="hidden" id="hfCustomerImagePath" value="@ViewBag.CustomerImagePath" />
        <input type="hidden" id="hfCustomerDocumentPath" value="@ViewBag.CustomerDocumentPath" />

        <div class="panel-body">
            @{
                <input type="hidden" id="hfReferencePage" value="@ViewBag.ReferencePage" />
                @Html.HiddenFor(model => model.AccountId)

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ResidentId, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ResidentId, new { htmlAttributes = new { @class = "form-control ", autofocus = "true" } })
                            @Html.ValidationMessageFor(model => model.ResidentId, "", new { @class = "text-danger" })
                        </div>
                        @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control ", autofocus = "true" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control " } })
                        </div>
                        @Html.Label("Birth Date", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control " } })
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.RT, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.RT, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.RT, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.RW, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.RW, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.RW, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.ProvinceId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("ProvinceId", (IEnumerable<SelectListItem>)ViewBag.Provinces, new { @class = "form-control", onchange = "GetCityList();" })
                            @Html.ValidationMessageFor(model => model.ProvinceId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            <select id="ddlCityId" name="ddlCityId" class="form-control" onchange="GetDistrictList();"></select>
                            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            <select id="DistrictId" name="DistrictId" class="form-control" onchange="GetSubDistrictList();"></select>
                            @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SubDistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">

                            <select id="SubDistrictId" name="SubDistrictId" class="form-control" onchange="GetZip(this);"></select>
                            @Html.ValidationMessageFor(model => model.SubDistrictId, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("Nationality", (IEnumerable<SelectListItem>)ViewBag.nationalityName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("Gender", (IEnumerable<SelectListItem>)ViewBag.genderName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("MaritalStatus", (IEnumerable<SelectListItem>)ViewBag.maritalstatusName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        @Html.Label("Valid Until", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ValidUntil, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.ValidUntil, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="clearfix"></div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CustomerImage, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            <input name="CustomerImage" id="imagepath" type="file" onchange="Preview(this);" />
                            @Html.ValidationMessageFor(model => model.CustomerImage, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.ResidentidImage, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            <input name="ResidentidImage" id="ResidentidImage" type="file" />
                            @Html.ValidationMessageFor(model => model.ResidentidImage, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        <div class="col-md-4" style="position: relative;">
                            <div id="dvPreview">
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        <span id="lblErrors" style="color:red;float:right">@TempData["lblerror"]</span>
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Submit" class="btn btn-primary" onclick="return validateCustomerAccount();" />
                            &nbsp;&nbsp;@Html.ActionLink("Customer List", "TagSaleList", "POS", new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <script type="text/javascript">
       
        $(document).ready(function () {
            $("#Gender").val($("#hfGender").val());
            $("#ProvinceId").val($("#hfProvinceId").val());
            GetCityList();
            $("#MaritalStatus").val($("#hfMaritalStatus").val());
            $("#QueueStatus").val($("#hfQueueStatus").val());
            $("#ReferencePage").val($("#hfReferencePage").val());
            $(".mylink").attr('href', $(".mylink").attr('href').replace('-999-', $("#hfReferencePage").val()));
            if ($("#hfReferencePage").val() == "customerqueuelist") {
                $("#QueueStatus").attr('disabled', 'disabled');
            }
            else
                $("#QueueStatus").attr('disabled');
            if ($("#hfCustomerImagePath").val() != '') {
                //$("#dvPreview").show();
                //$("#dvPreview").append("<img />");
                //$("#dvPreview img").attr("src", "/Attachment/Customer/" + $("#hfCustomerImagePath").val());
            }

        });

        
    </script>
    
                }
