@model VaaaN.MLFF.Libraries.CommonLibrary.CBE.CustomerAccountCBE
@{
    ViewBag.Title = "Register Customer";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<style type="text/css">
    input[type='number'] {
        -moz-appearance: textfield;
    }
    /* Webkit browsers like Safari and Chrome */
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>

@using (Html.BeginForm("RegisterCustomer", "POS", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-info">
        <div class="panel-heading" style="background-color:rgb(64, 178, 205);">
            <h1 class="panel-title new-title">New Registration</h1>
        </div>
        <div class="panel-body">
            @{
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control ", autofocus = "true" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control " } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @*@Html.LabelFor(model => model.AccountBalance, htmlAttributes: new { @class = "control-label col-md-2 required" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.AccountBalance, new { htmlAttributes = new { @class = "form-control " } })
                                @Html.ValidationMessageFor(model => model.AccountBalance, "", new { @class = "text-danger" })
                            </div>*@
                        @Html.LabelFor(model => model.CustomerImagePath, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            <input name="CustomerImage" id="imagepath" type="file" />
                            @Html.ValidationMessageFor(model => model.CustomerImage, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.ScannedDocsPath, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-4">
                            <input name="ScannedDocument" id="sacnneddocumentpath" type="file" />
                            @Html.ValidationMessageFor(model => model.ScannedDocument, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group"><span id="lblErrors" style="color:red;float:right">@TempData["lblerror"]</span>
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Submit" class="btn btn-primary" onclick="return Validation();" />
                            &nbsp;&nbsp;@Html.ActionLink("Customer List", "TagSaleList", "POS", new { @class = "btn btn-primary" })

                        </div>
                    </div>
                </div>
                //Html.RenderAction("RenderCustomerVehicle", "POS");
               
            }
        </div>
    </div>
<script type="text/javascript">
    $(window).on('load',function () {
        //$('#module_6').removeClass('list-group-item list-group-item-info collapsed');
        //$('#module_6').addClass('list-group-item list-group-item-info');

        //$('#POSsubMenu').removeClass('list-group-submenu collapse');
        //$('#POSsubMenu').addClass('list-group-submenu in');

        //$('#module_2').removeClass('list-group-item list-group-item-info');
        //$('#module_2').addClass('list-group-item list-group-item-info collapsed');

        //$('#AdminsubMenu').removeClass('list-group-submenu in');
        //$('#AdminsubMenu').addClass('list-group-submenu collapse');


        //$('#module_6').css({ "background-color": "#00B4CE" });
        //$('#module_6').css({ "font-weight": "bold" });
        //$('#submodule_11').css({ "background-color": "#00B2aa" });
        //$('#submodule_11').css({ "font-weight": "bold" });
    });
</script>
                }

